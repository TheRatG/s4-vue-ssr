# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    locales: ['en', 'ru']

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
        bind:
            $kernelProjectDir: '%kernel.project_dir%'
            $locales: '%locales%'

    Symfony\Component\Asset\VersionStrategy\VersionStrategyInterface: '@assets._version__default'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Menu,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\:
        resource: '../src/Service'
        public: true

    App\VueState\:
        resource: '../src/VueState'
        tags: ['app.vue_state']

    App\Service\VueStateCollection:
        arguments: [!tagged app.vue_state]

    App\Menu\JsonRenderer:
        arguments:
            $defaultOptions: "%knp_menu.renderer.list.options%"
        tags:
            - { name: knp_menu.renderer, alias: json }

    App\Menu\MenuBuilder:
        arguments:
            $factory: "@knp_menu.factory"
        tags:
            - { name: knp_menu.menu_builder, method: createMainMenu, alias: main }
